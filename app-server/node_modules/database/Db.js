var Base = require('Base'),
	connectToDb = require('./connectToDb'),
	initializeDb = require('./setup/initializeDb'),
	fn = require('functions');

var tables = {
	users: false,
	usertypes: false,
	v_users: true
};

var Db = module.exports = Base.extend({

	options: null,

	constructor: function (options) {
		this.options = options;
	},

	connect: function () {
		return connectToDb(this.options);
	},

	// middleware
	feeder: function () {
		return fn.proxy(function (req, res, next) {
			var connection = this.connect();

			if (!req.db) {
				req.db = {};
			}

			fn.each(tables, function (isView, tableName) {
				var klass = isView ? Db.ViewAdapter : Db.TableAdapter;
				req.db[tableName] = new klass({
					connection: connection,
					table: tableName
				});
			});

			next();
		}, this);
	},

	initialize: function () {
		initializeDb.apply(module, [this.options].concat(fn.array(arguments)));
	}

}, {

	TableAdapter: require('./DbTableAdapter'),

	ViewAdapter: require('./DbViewAdapter')
	
});