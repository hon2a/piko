var Base = require('Base'),
	DbTableAdapter = require('../DbTableAdapter'),
	fn = require('functions');

var DbTableInitializer = module.exports = Base.extend({

	adapter: null,

	constructor: function (adapter) {
		this.adapter = (adapter instanceof DbTableAdapter) ? adapter :
				new DbTableAdapter(adapter);
	},

	// protected abstract
	create: function (callback) {
		callback(fn.notImplemented(module.filename, 'createTable'));
	},

	init: function (callback) {
		this.initTable(callback);
	},

	// protected
	initTable: function (callback) {
		this.adapter.select({ where: false }, fn.proxy(function (err) {
			if (err && err.code === 'ER_NO_SUCH_TABLE') {
				console.log('Creating table...');
				this.create(fn.proxy(function () {
					console.log('Table created.');
					this.populate(callback);
				}, this));
			} else {
				callback(err);
			}
		}, this));
	},

	// protected
	populate: function (callback) {
		callback(null);
	}

});