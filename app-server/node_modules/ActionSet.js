var Base = require('Base'),
	fn = require('functions');

module.exports = ActionSet = Base.extend({

	actions: null,
	arguments: null,

	constructor: function () {
		this.actions = [];
		this.arguments = [];
	},

	add: function (action) {
		this.actions.push(action);
		this.arguments.push(fn.array(arguments, 1));
	},

	clear: function () {
		this.actions = [];
	},

	run: function (callback) {
		var args = fn.array(arguments);
		callback = args.pop();
		this.runActions(args, callback);
	},

	// protected
	runActions: function (args, callback) {
		// call actions with args . this.arguments[actionIndex] . fnNext
		// then call callback({Error/String} error, {Array} results);
		throw 'Not implemented.';
	},

	set: function (actions) {
		this.clear();
		actions.forEach(this.add, this);
	}

});