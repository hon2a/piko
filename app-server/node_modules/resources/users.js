var fn = require('functions'),
	HTTP = require('http-status'),
	User = require('User'),
	Sequence = require('Sequence'),
	resource = require('resource');

// local functions

var getUser = function (req, conditions, callback) {
		req.db.v_users.selectSingle({
			where: conditions,
			transform: User.transformPrivileges
		}, callback);
	};

// resource definition

var UsersHandlerSet = resource.DbTableHandlerSet.extend({
	create: function (req, res) {
		getUser(req, { username: req.data.username }, function (err, user) {
			if (err) {
				res.finish(err);
			} else if (!user) {
				this.base(req, res);
			} else {
				res.send('Username already taken.', HTTP.BAD_REQUEST);
			}
		});
	},
	load: function (req, id, next) {
		if (fn.isInt(id)) {
			getUser(req, { id: id }, next);
		} else {
			getUser(req, { username: id }, next);
		}
	}
});

var users = module.exports = (new resource.Resource())
	.use(resource.authenticator({
		index: 'viewUsers',
		create: 'createUser',
		show: 'viewUsers',
		update: 'editUser',
		destroy: 'deleteUser'
	}))
	.use(resource.loadChecker('user'))
	.setHandlers(new UsersHandlerSet({
		name: 'user',
		table: 'users',
		transform: User.transformPrivileges,
		view: 'v_users'
	}))
	.exportHandlers();