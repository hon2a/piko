var fn = require('functions'),
	HTTP = require('http-status'),
	ActionSequence = require('ActionSequence'),
	resource = require('resource');

// resource definition

var ApplicationsHandlerSet = resource.DbTableHandlerSet.extend({

	getYearEnd: function () {
		var now = new Date(),
			yearEnd = new Date(now.getFullYear(), 7, 1);	// TODO: allow to customize year end
		if (yearEnd.getTime() < Date.now()) {
			yearEnd.setYear(now.getFullYear() + 1);
		}
		return yearEnd;
	},

// overrides

	create: function (req, res) {
		req.data.expires = this.getYearEnd();
		this.base(req, res);
	},

	show: function (req, res) {
		fn.merge(req.application, fn.pick(req.user, ['username', 'name', 'email']));
		this.base(req, res);
	},

	update: function (req, res) {
		if (req.application.approved !== null) {
			res.send('Already approved.', HTTP.FORBIDDEN);
		} else {
			req.data.approved = req.data.approved ? new Date() : null;
			this.base(req, res);
		}
	},
	
	load: function (req, id, next) {
		if (id === 'latest') {
			this.getView(req).select({
				where: this.getParentLink(req)
			}, function (err, rows) {
				next(err, rows.length ? rows[rows.length - 1] : null);
			});
		} else {
			this.base(req, id, next);
		}
	}
	
});

var restrictToOwner = function (req, res, next) {
	if (req.access && req.user && (req.access.id === req.user.id)) {
		next(null, false);
	} else {
		res.send('Access restricted to owner.', HTTP.FORBIDDEN);
	}
};

var applications = module.exports = (new resource.Resource())
	.use(resource.authenticator({
		index: restrictToOwner,
		create: restrictToOwner,
		show: function (req, res, next) {
			if (req.access && !req.access.can.approveApplications) {
				restrictToOwner(req, res, next);
			} else {
				next(null, 'approveApplications');
			}
		},
		update: 'approveApplications',
		destroy: restrictToOwner
	}))
	.use(resource.validator({
		create: {
			school: ['text', 5, 50],
			grade: ['number', 6, 9]
		},
		update: {
			approved: ['bool', true]
		}
	}))
	.setHandlers(new ApplicationsHandlerSet({
		id: 'application',
		table: 'applications',
		parent: {
			field: 'userId',
			id: 'user'
		}
	}))
	.exportHandlers();