var HTTP = require('http-status'),
	expandConfig = require('../expandConfig'),
	util = require('util'),
	fn = require('functions'),
	ActionSequence = require('ActionSequence');

var authenticator = module.exports = function (config) {
	config = expandConfig(config);
	
	var checkPermissions = function (req, res, auth, next) {
			if (auth) {
				if (req.access) {
					if (fn.isString(auth) && !req.access.can[auth]) {
						res.send('Insufficient permissions.', HTTP.FORBIDDEN);
					} else {
						next();
					}
				} else {
					res.send('Not signed in.', HTTP.FORBIDDEN);
				}
			} else {
				next();
			}
		},
		authenticate = function (req, res, auth, next) {
			if (fn.isFunction(auth)) {
				auth(req, res, function (err, newAuth) {
					if (err) {
						res.finish(err);
					} else {
						checkPermissions(req, res, newAuth, next);
					}
				});
			} else {
				checkPermissions(req, res, auth, next);
			}
		};

	
	return function (req, res, action, next) {
		var auths = config[action];
		auths = util.isArray(auths) ? auths : [auths];
		
		var seq = new ActionSequence();
		seq.fromArray(auths, function (auth, i, next) {
			authenticate(req, res, auth, next);
		});
		seq.run(next);
	};
};